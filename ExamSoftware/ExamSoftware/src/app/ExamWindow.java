/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import classes.JSON;
import classes.Question;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import static java.awt.Component.BOTTOM_ALIGNMENT;
import java.awt.Dimension;
import java.awt.GridBagLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.Reader;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Arrays;
import java.util.List;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;

/**
 *
 * @author Green
 */
public class ExamWindow extends javax.swing.JFrame {

    private static int i = -1;

    /**
     * Creates new form MainWindow
     */
    public ExamWindow() {
        initComponents();
        runComponents(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 956, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    static List<Question> preguntas;
    public static final Dimension ss = Toolkit.getDefaultToolkit().getScreenSize();

//    public static void main(String args[]) throws FileNotFoundException {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ExamWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ExamWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ExamWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ExamWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//
//                //preguntas = getQuestions.readLines();
//                loadData();
//
//                new ExamWindow().setVisible(true);
//            }
//        }
//        );
//
//    }

    public static void loadData() {
        preguntas = JSON.loadFromJSON(preguntas);
    }

    public void runComponents(boolean sum) {

        //  Lógica para iterar @preguntas
        if (sum) {
            if (i != 1004) {
                if (preguntas.get(++i).isAnswered()) {
                    runComponents(sum);
                }
            } else {
                i = 0;
            }

        } else {
            if (i != 0) {
                if (preguntas.get(--i).isAnswered()) {
                    runComponents(sum);
                }
            } else {
                i = 1004;
            }
        }

        //  Declaración de elementos de la interfaz
        JFrame mw = new ExamWindow();
        JPanel panelPrincipal = new JPanel();
        JPanel panelWraper = new JPanel();
        JPanel panelRespuestas = new JPanel();
        JPanel panelBotones = new JPanel();
        JLabel enunciadoLabel = new javax.swing.JLabel();
        
        JButton botonNext = new JButton();
        JButton botonSend = new JButton();
        JButton botonPrev = new JButton();

        //  Ventana principal
        mw.setVisible(true);
        mw.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        //  Panel que va a contener el panel principal
        panelWraper.setLayout(new GridBagLayout());
        panelWraper.setAlignmentX(CENTER_ALIGNMENT);
        panelWraper.setAlignmentY(TOP_ALIGNMENT);
        panelWraper.setSize(ss);
        panelWraper.setVisible(true);
        mw.add(panelWraper);
        

        //  Panel que va a contener el resto de elementos
        panelPrincipal.setLayout(new BoxLayout(panelPrincipal, BoxLayout.Y_AXIS));
        panelPrincipal.setSize(ss);
        panelPrincipal.setVisible(true);
        panelWraper.add(panelPrincipal);

        //  Enunciado
        if (!preguntas.get(i).isQuestionHasImage()) {
            enunciadoLabel.setVisible(true);
            enunciadoLabel.setText(convertToMultiline(i
                    + "Chapter: "
                    + preguntas.get(i).getChapter()
                    + " Question: "
                    + preguntas.get(i).getNumber()
                    + "\n"
                    + preguntas.get(i).getQuestion()));
            panelPrincipal.add(enunciadoLabel);
        } else {
            enunciadoLabel.setVisible(true);
            
            JLabel imagenLabel;

            Path path = new File(new File("").getAbsolutePath() + "\\cap" + preguntas.get(i).getChapter() + "pregunta" + preguntas.get(i).getNumber() + ".png").toPath();
            ImageIcon icon = new ImageIcon(path.toString());

            imagenLabel = new JLabel( icon, JLabel.CENTER);
            
            enunciadoLabel.setText(convertToMultiline(i
                    + "Chapter: "
                    + preguntas.get(i).getChapter()
                    + " Question: "
                    + preguntas.get(i).getNumber()
                    + "\n"
                    + preguntas.get(i).getQuestion()));
            
            panelPrincipal.add(enunciadoLabel);
            panelPrincipal.add(imagenLabel);
            enunciadoLabel.setVisible(true);
            imagenLabel.setVisible(true);
        }

        //  Panel contenedor de los RadioButtons de las respuestas
        panelRespuestas.setVisible(true);
        panelRespuestas.setLayout(new BoxLayout(panelRespuestas, BoxLayout.Y_AXIS));
        panelPrincipal.add(panelRespuestas);

        //  Función que crea los RadioButtons dependiendo del numero de respuestas
        setRadioButtons(i, panelRespuestas);

        //  Panel para los botones de control (prev,send,next)
        panelBotones.setLayout(new BoxLayout(panelBotones, BoxLayout.X_AXIS));
        panelBotones.setVisible(true);
        panelPrincipal.setSize(ss);
        panelPrincipal.add(panelBotones);

        botonPrev.setText("<--");
        botonPrev.setVisible(true);
        botonPrev.addActionListener((ActionEvent e) -> {
            //your actions
            mw.dispose();
            runComponents(false);
        });
        panelBotones.add(botonPrev, BOTTOM_ALIGNMENT);

        botonSend.setText("-SEND-");
        botonSend.setVisible(true);
        botonSend.addActionListener((ActionEvent e) -> {
            //your actions
            mw.dispose();
            preguntas.get(i).setAnswered(true);
            runComponents(true);
        });
        panelBotones.add(botonSend, BOTTOM_ALIGNMENT);

        botonNext.setText("-->");
        botonNext.setVisible(true);
        botonNext.addActionListener((ActionEvent e) -> {
            //your actions
            mw.dispose();
            runComponents(true);
        });
        panelBotones.add(botonNext, BOTTOM_ALIGNMENT);

    }

    public static String convertToMultiline(String orig) {
        return "<html>" + orig.replaceAll("\n", "<br>");
    }

    public static void setRadioButtons(int i, JPanel panelRespuestas) {
        JRadioButton prueba1;
        JRadioButton prueba2;
        JRadioButton prueba3;
        JRadioButton prueba4;
        JRadioButton prueba5;
        JRadioButton prueba6;
        switch (preguntas.get(i).getOptions().size()) {
            case 6:
                prueba1 = new JRadioButton(preguntas.get(i).getOptions().get(0));
                prueba2 = new JRadioButton(preguntas.get(i).getOptions().get(1));
                prueba3 = new JRadioButton(preguntas.get(i).getOptions().get(2));
                prueba4 = new JRadioButton(preguntas.get(i).getOptions().get(3));
                prueba5 = new JRadioButton(preguntas.get(i).getOptions().get(4));
                prueba6 = new JRadioButton(preguntas.get(i).getOptions().get(5));
                panelRespuestas.add(prueba1);
                panelRespuestas.add(prueba2);
                panelRespuestas.add(prueba3);
                panelRespuestas.add(prueba4);
                panelRespuestas.add(prueba5);
                panelRespuestas.add(prueba6);
                break;
            case 5:
                prueba1 = new JRadioButton(preguntas.get(i).getOptions().get(0));
                prueba2 = new JRadioButton(preguntas.get(i).getOptions().get(1));
                prueba3 = new JRadioButton(preguntas.get(i).getOptions().get(2));
                prueba4 = new JRadioButton(preguntas.get(i).getOptions().get(3));
                prueba5 = new JRadioButton(preguntas.get(i).getOptions().get(4));
                panelRespuestas.add(prueba1);
                panelRespuestas.add(prueba2);
                panelRespuestas.add(prueba3);
                panelRespuestas.add(prueba4);
                panelRespuestas.add(prueba5);
                break;

            case 4:
                prueba1 = new JRadioButton(preguntas.get(i).getOptions().get(0));
                prueba2 = new JRadioButton(preguntas.get(i).getOptions().get(1));
                prueba3 = new JRadioButton(preguntas.get(i).getOptions().get(2));
                prueba4 = new JRadioButton(preguntas.get(i).getOptions().get(3));
                panelRespuestas.add(prueba1);
                panelRespuestas.add(prueba2);
                panelRespuestas.add(prueba3);
                panelRespuestas.add(prueba4);
                break;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
